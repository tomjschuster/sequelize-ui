name: CI

on:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: |
          if [ ! -d node_modules ];
          then
            npm ci --loglevel warn --yes;
          else
            echo package.json and package-lock.json unchanged. Using cache.;
          fi

  # test-sqlite:
  #   runs-on: ubuntu-latest
  #   needs: install
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2

  #     - name: Use Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16.x'

  #     - name: Check dependencies cache
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

  #     - name: Test
  #       run: npm run test:e2e:migrations
  #       env:
  #         SQL_DIALECT: sqlite

  # test-postgres:
  #   runs-on: ubuntu-latest
  #   needs: install

  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432:5432

  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2

  #     - name: Use Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16.x'

  #     - name: Check dependencies cache
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

  #     - name: Test
  #       run: npm run test:e2e:migrations
  #       env:
  #         SQL_DIALECT: postgres

  test-mysql:
    runs-on: ubuntu-latest
    needs: install

    services:
      mariadb:
      image: mariadb:latest
      env:
        MYSQL_ROOT_PASSWORD: root
      ports:
        - '3306:3306'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test:e2e:migrations
        env:
          SQL_DIALECT: mysql
