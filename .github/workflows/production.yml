name: Production

on:
  push:
    branches:
      - main
env:
  CF_ACCOUNT_ID: c6b0fe2afa4b4d09801e9d18c859da8d
  PAGES_PROJECT_NAME: sequelize-ui

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: |
          if [ ! -d node_modules ];
          then
            npm ci --loglevel warn --yes;
          else
            echo package.json and package-lock.json unchanged. Using cache.;
          fi

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run check:format

      - name: Type check
        run: npm run check:types

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test:unit

  test-migrations-postgres:
    runs-on: ubuntu-latest
    needs: install

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test:e2e:migrations
        env:
          SQL_DIALECT: postgres

  test-migrations-mysql:
    runs-on: ubuntu-latest
    needs: install

    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - '3306:3306'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test:e2e:migrations
        env:
          SQL_DIALECT: mysql

  test-migrations-mariadb:
    runs-on: ubuntu-latest
    needs: install

    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - '3306:3306'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test:e2e:migrations
        env:
          SQL_DIALECT: mariadb

  test-migrations-mssql:
    runs-on: ubuntu-latest
    needs: install

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: 'Password1'
          ACCEPT_EULA: 'Y'
        ports:
          - '1433:1433'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Check dependencies cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test:e2e:migrations
        env:
          SQL_DIALECT: mssql

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - test-migrations-postgres
      - test-migrations-mysql
      - test-migrations-mariadb
      - test-migrations-mssql
    steps:
      - name: Deploy production
        uses: tomjschuster/cloudflare-pages-deploy-action@v0
        with:
          account-id: '${{ env.CF_ACCOUNT_ID }}'
          project-name: '${{ env.PAGES_PROJECT_NAME }}'
          api-key: '${{ secrets.CF_GLOBAL_APIKEY }}'
          email: '${{ secrets.CF_EMAIL }}'
          production: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_EMAIL: ${{ secrets.CF_EMAIL }}
          CLOUDFLARE_KEY: ${{ secrets.CF_GLOBAL_APIKEY }}
          CLOUDFLARE_ZONE: ${{ secrets.CF_ZONE }}
          PURGE_URLS: '[
            "https://sequelizeui.app",
            "https://sequelizeui.app/privacy",
            "https://sequelizeui.app/schema",
            "https://sequelizeui.app/schema/blog",
            "https://sequelizeui.app/schema/employees",
            "https://sequelizeui.app/schema/new",
            "https://sequelizeui.app/schema/sakila"
          ]'
